header{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 200px;
    background: linear-gradient(to bottom, #000000 40%,#0560aa 80%,#7cd4ef 100%);
}

body{ 
    padding-top: 200px;
}

.launch-button{
    position: absolute;
    left: 50%;
    top: 75%;

    /* The link is now exactly centered... even though we don't know the exact width of either the header or the link itself. It's a useful technique for centering an absolutely-positioned item in its container.*/
    transform: translate(-50%, -50%);

    /* button styles */
    text-decoration: none;
    background-color: #aa0000;
    color: white;
    font-size: 20px;
    /* making space for icons */
    padding: 15px 60px 15px 30px;

    border-radius: 10px;
    /* smooth transitions */
    transition: transform 0.5s, background-color 0.1s, padding 0.5s, box-shadow 0.1s;
}   

/* changes when mouse is hovering over button */
.launch-button:hover{
    background-color: #cc0000;
    /* shadows/glows */
    box-shadow: 0 0 8px #ff0000;
}

/* Button darkens when clicked */
.launch-button:active{
    background-color: #750000;
    box-shadow: 0 0 2px #750000;
    transform: translate(-50%, -20%) scale(0.7);
    padding: 15px 30px;
}


.launch-button .rocket{
    /* this makes it a positioning parent for its descendant elements, in this case, the icons. */
    position: absolute;
    /* Centers the rocket vertically. */
    top: 50%;
    /*  Positions the rocket 40px from the right edge, in the gap we made. */
    right: 40px;
    transition: transform 0.5s;
}

/* selecting both icons */
.launch-button .rocket i{
    position: absolute;
    top: 0;
    left: 0;
}

.launch-button .fa-rocket{
    /* This centers the rocket in its container (just like we did the button in the header), and rotates it to point straight up. */
    transform: translate(-50%, -50%)
    rotate(-45deg);
}

.launch-button .fa-burn {
    /* This centers it horizontally, aligning it with the rocket, but leaves it hanging lower vertically, so it's toward the rocket exhaust nozzle. It also rotates it 180Â°, and makes it smaller */
    transform: translate(-50%, -15%) rotate(180deg) scale(0.1);
    color: orange;
    transition: transform 0.4s;
}

/* bigger flame during hover */
.launch-button:hover .fa-burn{
    transform: translate(-50%, -15%) rotate(180deg) scale(0.4);
}

/* We're overriding to make the flame still bigger on active. We're also shifting it downward so the whole flame is exposed. */
.launch-button:active .fa-burn{
    transform: translate(-50%, 25%) rotate(180deg) scale(0.8);
}

.launch-button:hover .rocket{
    transform: scale(1.3);
}

.label{
    letter-spacing: 0.1em;
    text-transform: uppercase;
    color: white;   
}

.label:hover{
    color: orange;
    text-shadow: 0 0 3px rgb(251, 255, 0, 0.5);   
}

.launch-button:active .rocket{
    transform: rotate(-15deg) translate(60px, -140px) scale(3.5);
}

.launch-button .label{
    transition: color 0.2s, text-shadow 0.2s;
}      

/* We've just added a set of keyframes with the name burn. */
@keyframes burn {
    from { transform: rotate(-7deg); }
    33% { transform: rotate(4deg); }
    66% { transform: rotate(-4deg); }
    to { transform: rotate(7deg); }
  }

  /* animation */
  .launch-button:active .fa-burn::before{
    display: block;
    /* This means "apply the transform around an axis at the base of the flame, not the center of it."*/
    transform-origin: center bottom;
    /* This tells the element that it should use the "burn" keyframes. */
    animation-name: burn; 
    /* Specifies the time over which a single 'loop' of the keyframes should span. */
    animation-duration: 0.1s; 
    /* This tells the animation to loop without end (as long as this selector applies). */
    animation-iteration-count: infinite; 
    /* This tells the keyframes to alternate forward and backward in time, 'bouncing' back and forth. */
    animation-direction: alternate; 
  }